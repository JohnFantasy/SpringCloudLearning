<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="packageMapper.base.TBillBaseMapper">


    <insert id="insertTBill" >
        INSERT INTO `t_bill`
        (
        <trim suffixOverrides=",">
                    <if test="billNo!=null">
                        `bill_no`,
                    </if>
                    <if test="billAmount!=null">
                        `bill_amount`,
                    </if>
                    <if test="orderNo!=null">
                        `order_no`,
                    </if>
                    <if test="createTime!=null">
                        `create_time`,
                    </if>
                    <if test="updateTime!=null">
                        `update_time`,
                    </if>
        </trim>
        )
        VALUES
        (
        <trim suffixOverrides=",">
                <if test="billNo!=null">
                    #{billNo},
                </if>
                <if test="billAmount!=null">
                    #{billAmount},
                </if>
                <if test="orderNo!=null">
                    #{orderNo},
                </if>
                <if test="createTime!=null">
                    #{createTime},
                </if>
                <if test="updateTime!=null">
                    #{updateTime},
                </if>
        </trim>
        )
    </insert>




    <update id="updateTBill">
        UPDATE `t_bill`
        SET
        <trim suffixOverrides=",">
            <if test="billAmount != null">
                `bill_amount` = #{billAmount},
            </if>
            <if test="orderNo != null and orderNo!=''">
                `order_no` = #{orderNo},
            </if>
            <if test="createTime != null">
                `create_time` = #{createTime},
            </if>
            <if test="updateTime != null">
                `update_time` = #{updateTime},
            </if>
        </trim>
        WHERE
        <trim suffixOverrides="and">
                `bill_no` = #{billNo} and
        </trim>
    </update>

    <update id="update">
        UPDATE `t_bill`
        SET
        <trim suffixOverrides=",">
        <if test="set.billAmount != null">
            `bill_amount` = #{set.billAmount},
        </if>
        <if test="set.orderNo != null and set.orderNo!=''">
            `order_no` = #{set.orderNo},
        </if>
        <if test="set.createTime != null">
            `create_time` = #{set.createTime},
        </if>
        <if test="set.updateTime != null">
            `update_time` = #{set.updateTime},
        </if>
        </trim>
        <trim prefix="where" suffixOverrides="and | or">
                <if test="where.billNoList != null">
                    `bill_no` in
                    <foreach collection="where.billNoList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test ="where.fuzzyBillNo!=null and where.fuzzyBillNo.size()>0">
                (
                <foreach collection="where.fuzzyBillNo"  separator="or" item="item">
                    `Bill_no` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzyBillNo!=null and where.rightFuzzyBillNo.size()>0">
                (
                <foreach collection="where.rightFuzzyBillNo"  separator="or" item="item">
                    `Bill_no` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
                <if test="where.billAmountList != null">
                    `bill_amount` in
                    <foreach collection="where.billAmountList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.billAmountSt !=null">
                `bill_amount` >= #{where.billAmountSt} and
            </if>
            <if test="where.billAmountEd!=null">
                `bill_amount` &lt;= #{where.billAmountEd} and
            </if>
                <if test="where.orderNoList != null">
                    `order_no` in
                    <foreach collection="where.orderNoList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test ="where.fuzzyOrderNo!=null and where.fuzzyOrderNo.size()>0">
                (
                <foreach collection="where.fuzzyOrderNo"  separator="or" item="item">
                    `Order_no` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzyOrderNo!=null and where.rightFuzzyOrderNo.size()>0">
                (
                <foreach collection="where.rightFuzzyOrderNo"  separator="or" item="item">
                    `Order_no` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
                <if test="where.createTimeList != null">
                    `create_time` in
                    <foreach collection="where.createTimeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.createTimeSt !=null">
                `create_time` >= #{where.createTimeSt} and
            </if>
            <if test="where.createTimeEd!=null">
                `create_time` &lt;= #{where.createTimeEd} and
            </if>
                <if test="where.updateTimeList != null">
                    `update_time` in
                    <foreach collection="where.updateTimeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.updateTimeSt !=null">
                `update_time` >= #{where.updateTimeSt} and
            </if>
            <if test="where.updateTimeEd!=null">
                `update_time` &lt;= #{where.updateTimeEd} and
            </if>
        </trim>
    </update>


    <resultMap type="packageModel.TBill" id="TBillMap">
        <result property="billNo" column="bill_no"/>
        <result property="billAmount" column="bill_amount"/>
        <result property="orderNo" column="order_no"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>


    <select id="queryTBill" resultMap="TBillMap">
        select
        <include refid="baseResult"></include>
        from  `t_bill`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="billNo != null and billNo!=''">
                `bill_no` = #{billNo} and
            </if>
            <if test="billAmount != null">
                `bill_amount` = #{billAmount} and
            </if>
            <if test="orderNo != null and orderNo!=''">
                `order_no` = #{orderNo} and
            </if>
            <if test="createTime != null">
                `create_time` = #{createTime} and
            </if>
            <if test="updateTime != null">
                `update_time` = #{updateTime} and
            </if>
            <if test = "(_parameter instanceof packageModel.TBill$QueryBuilder) == true">
                <if test="billNoList != null">
                    `bill_no` in
                    <foreach collection="billNoList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test ="fuzzyBillNo!=null and fuzzyBillNo.size()>0">
                    (
                    <foreach collection="fuzzyBillNo"  separator="or" item="item">
                        `Bill_no` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyBillNo!=null and rightFuzzyBillNo.size()>0">
                    (
                    <foreach collection="rightFuzzyBillNo"  separator="or" item="item">
                        `Bill_no` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test="billAmountList != null">
                    `bill_amount` in
                    <foreach collection="billAmountList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="billAmountSt !=null">
                    `bill_amount` >= #{billAmountSt} and
                </if>
                <if test="billAmountEd!=null">
                    `bill_amount` &lt;= #{billAmountEd} and
                </if>
                <if test="orderNoList != null">
                    `order_no` in
                    <foreach collection="orderNoList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test ="fuzzyOrderNo!=null and fuzzyOrderNo.size()>0">
                    (
                    <foreach collection="fuzzyOrderNo"  separator="or" item="item">
                        `Order_no` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyOrderNo!=null and rightFuzzyOrderNo.size()>0">
                    (
                    <foreach collection="rightFuzzyOrderNo"  separator="or" item="item">
                        `Order_no` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test="createTimeList != null">
                    `create_time` in
                    <foreach collection="createTimeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="createTimeSt !=null">
                    `create_time` >= #{createTimeSt} and
                </if>
                <if test="createTimeEd!=null">
                    `create_time` &lt;= #{createTimeEd} and
                </if>
                <if test="updateTimeList != null">
                    `update_time` in
                    <foreach collection="updateTimeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="updateTimeSt !=null">
                    `update_time` >= #{updateTimeSt} and
                </if>
                <if test="updateTimeEd!=null">
                    `update_time` &lt;= #{updateTimeEd} and
                </if>
            </if>
        </trim>
    </select>

    <select id="queryTBillLimit1" resultMap="TBillMap">
        select
        <include refid="baseResult"></include>
        from  `t_bill`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="billNo != null and billNo!=''">
                `bill_no` = #{billNo} and
            </if>
            <if test="billAmount != null">
                `bill_amount` = #{billAmount} and
            </if>
            <if test="orderNo != null and orderNo!=''">
                `order_no` = #{orderNo} and
            </if>
            <if test="createTime != null">
                `create_time` = #{createTime} and
            </if>
            <if test="updateTime != null">
                `update_time` = #{updateTime} and
            </if>
            <if test = "(_parameter instanceof packageModel.TBill$QueryBuilder) == true">
                    <if test="billNoList != null">
                        `bill_no` in
                        <foreach collection="billNoList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test ="fuzzyBillNo!=null and fuzzyBillNo.size()>0">
                    (
                    <foreach collection="fuzzyBillNo"  separator="or" item="item">
                        `Bill_no` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyBillNo!=null and rightFuzzyBillNo.size()>0">
                    (
                    <foreach collection="rightFuzzyBillNo"  separator="or" item="item">
                        `Bill_no` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                    <if test="billAmountList != null">
                        `bill_amount` in
                        <foreach collection="billAmountList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="billAmountSt !=null">
                    `bill_amount` >= #{billAmountSt} and
                </if>
                <if test="billAmountEd!=null">
                    `bill_amount` &lt;= #{billAmountEd} and
                </if>
                    <if test="orderNoList != null">
                        `order_no` in
                        <foreach collection="orderNoList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test ="fuzzyOrderNo!=null and fuzzyOrderNo.size()>0">
                    (
                    <foreach collection="fuzzyOrderNo"  separator="or" item="item">
                        `Order_no` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyOrderNo!=null and rightFuzzyOrderNo.size()>0">
                    (
                    <foreach collection="rightFuzzyOrderNo"  separator="or" item="item">
                        `Order_no` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                    <if test="createTimeList != null">
                        `create_time` in
                        <foreach collection="createTimeList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="createTimeSt !=null">
                    `create_time` >= #{createTimeSt} and
                </if>
                <if test="createTimeEd!=null">
                    `create_time` &lt;= #{createTimeEd} and
                </if>
                    <if test="updateTimeList != null">
                        `update_time` in
                        <foreach collection="updateTimeList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="updateTimeSt !=null">
                    `update_time` >= #{updateTimeSt} and
                </if>
                <if test="updateTimeEd!=null">
                    `update_time` &lt;= #{updateTimeEd} and
                </if>
            </if>
        </trim>
        limit 1
    </select>

    <sql id="allResult">
        <trim suffixOverrides=",">
        `bill_no`,
        `bill_amount`,
        `order_no`,
        `create_time`,
        `update_time`,
        </trim>
    </sql>



    <sql id="baseResult">
        <trim suffixOverrides=",">
            <if test = "(_parameter instanceof packageModel.TBill$QueryBuilder) == true">

                <if test="fetchFields==null">
                    <include refid="allResult"></include>
                </if>
                <if test="fetchFields!=null">
                    <if test="fetchFields.AllFields !=null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields ==null and fetchFields.fetchFields==null and fetchFields.excludeFields==null and fetchFields.otherFields==null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.fetchFields!=null">
                    <if test="fetchFields.fetchFields.billNo==true">
                        `bill_no`,
                    </if>
                    <if test="fetchFields.fetchFields.billAmount==true">
                        `bill_amount`,
                    </if>
                    <if test="fetchFields.fetchFields.orderNo==true">
                        `order_no`,
                    </if>
                    <if test="fetchFields.fetchFields.createTime==true">
                        `create_time`,
                    </if>
                    <if test="fetchFields.fetchFields.updateTime==true">
                        `update_time`,
                    </if>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.excludeFields!=null">
                    <if test="fetchFields.excludeFields.billNo==null">
                        `bill_no`,
                    </if>
                    <if test="fetchFields.excludeFields.billAmount==null">
                        `bill_amount`,
                    </if>
                    <if test="fetchFields.excludeFields.orderNo==null">
                        `order_no`,
                    </if>
                    <if test="fetchFields.excludeFields.createTime==null">
                        `create_time`,
                    </if>
                    <if test="fetchFields.excludeFields.updateTime==null">
                        `update_time`,
                    </if>
                    </if>
                    <if test="fetchFields.otherFields!=null and fetchFields.otherFields.size>0">
                        <foreach collection="fetchFields.otherFields" index="index" item="item" separator=",">
                        `#{item}`
                        </foreach>
                    </if>
                </if>
            </if>
            <if test="(_parameter instanceof packageModel.TBill$QueryBuilder) == false" >
                <include refid="allResult"></include>
            </if>

        </trim>
    </sql>


</mapper>